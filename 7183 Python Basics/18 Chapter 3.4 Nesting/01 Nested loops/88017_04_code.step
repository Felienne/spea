{
    "block": {
        "name": "code",
        "text": "<p></p><div>We want to use the nested loops to print the cards in order of value, so:<br>7 of Clubs</div><div>7 of Diamonds<br>7 of Hearts</div><div>7 of Spades</div><div>8 of Clubs </div><div>...<br><br>How should we change the code?</div><div><br></div><br><p></p>",
        "video": null,
        "animation": null,
        "options": {
            "execution_time_limit": 5,
            "execution_memory_limit": 256,
            "limits": {
                "python3": {
                    "time": 15,
                    "memory": 256
                }
            },
            "code_templates": {
                "python3": "suits = ['clubs', 'diamonds', 'hearts', 'spades']\nvalues = ['7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']\nfor suit in suits:\n    for value in values:\n        print(value + ' of ' + suit.capitalize())"
            },
            "code_templates_options": {},
            "samples": [
                [
                    "",
                    "7 of Clubs\n7 of Diamonds\n7 of Hearts\n7 of Spades\n8 of Clubs\n8 of Diamonds\n8 of Hearts\n8 of Spades\n9 of Clubs\n9 of Diamonds\n9 of Hearts\n9 of Spades\n10 of Clubs\n10 of Diamonds\n10 of Hearts\n10 of Spades\nJack of Clubs\nJack of Diamonds\nJack of Hearts\nJack of Spades\nQueen of Clubs\nQueen of Diamonds\nQueen of Hearts\nQueen of Spades\nKing of Clubs\nKing of Diamonds\nKing of Hearts\nKing of Spades\nAce of Clubs\nAce of Diamonds\nAce of Hearts\nAce of Spades"
                ]
            ]
        },
        "subtitle_files": [],
        "source": {
            "code": "# This is a sample Code Challenge\n# Learn more: https://stepik.org/lesson/9173\n# Ask your questions via support@stepik.org\n\ndef generate():\n    return []\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n\n# def solve(dataset):\n#     a, b = dataset.split()\n#     return str(int(a) + int(b))",
            "execution_time_limit": 5,
            "execution_memory_limit": 256,
            "samples_count": 1,
            "templates_data": "::python3\n::header\n__ = \"blank\"\ndef assertEqual(x,y):\n    if x == y:\n        pass\n    else:\n        message = str(x) + ' is not ' + str(y)\n        raise AssertionError(message)   \n::code\nsuits = ['clubs', 'diamonds', 'hearts', 'spades']\nvalues = ['7', '8', '9', '10', 'Jack', 'Queen', 'King', 'Ace']\nfor suit in suits:\n    for value in values:\n        print(value + ' of ' + suit.capitalize()) \n\n\n\n",
            "is_time_limit_scaled": true,
            "is_memory_limit_scaled": true,
            "manual_time_limits": [],
            "manual_memory_limits": [],
            "test_archive": [],
            "test_cases": [
                [
                    "",
                    "7 of Clubs\n7 of Diamonds\n7 of Hearts\n7 of Spades\n8 of Clubs\n8 of Diamonds\n8 of Hearts\n8 of Spades\n9 of Clubs\n9 of Diamonds\n9 of Hearts\n9 of Spades\n10 of Clubs\n10 of Diamonds\n10 of Hearts\n10 of Spades\nJack of Clubs\nJack of Diamonds\nJack of Hearts\nJack of Spades\nQueen of Clubs\nQueen of Diamonds\nQueen of Hearts\nQueen of Spades\nKing of Clubs\nKing of Diamonds\nKing of Hearts\nKing of Spades\nAce of Clubs\nAce of Diamonds\nAce of Hearts\nAce of Spades"
                ]
            ]
        },
        "subtitles": {},
        "tests_archive": "/api/step-sources/324727/tests",
        "feedback_correct": "",
        "feedback_wrong": ""
    },
    "id": "324727",
    "time": "2018-05-10T16:25:41.742553"
}