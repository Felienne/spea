{
    "block": {
        "name": "code",
        "text": "<p>Now that we have stored integer and float numbers, we can also store strings, with the same syntax:</p><div><pre><code>name = 'Harry'</code></pre></div><br><p></p><div>Try it in the next step!</div>",
        "video": null,
        "animation": null,
        "options": {
            "execution_time_limit": 5,
            "execution_memory_limit": 256,
            "limits": {
                "python3": {
                    "time": 15,
                    "memory": 256
                },
                "c": {
                    "time": 5,
                    "memory": 256
                },
                "c++": {
                    "time": 5,
                    "memory": 256
                },
                "c++11": {
                    "time": 5,
                    "memory": 256
                },
                "haskell": {
                    "time": 10,
                    "memory": 256
                },
                "haskell 7.10": {
                    "time": 10,
                    "memory": 256
                },
                "haskell 8.0": {
                    "time": 10,
                    "memory": 256
                },
                "java": {
                    "time": 8,
                    "memory": 256
                },
                "java8": {
                    "time": 8,
                    "memory": 256
                },
                "java9": {
                    "time": 8,
                    "memory": 256
                },
                "octave": {
                    "time": 13,
                    "memory": 256
                },
                "asm32": {
                    "time": 5,
                    "memory": 256
                },
                "asm64": {
                    "time": 5,
                    "memory": 256
                },
                "shell": {
                    "time": 5,
                    "memory": 256
                },
                "rust": {
                    "time": 13,
                    "memory": 256
                },
                "r": {
                    "time": 8,
                    "memory": 256
                },
                "ruby": {
                    "time": 15,
                    "memory": 256
                },
                "clojure": {
                    "time": 10,
                    "memory": 256
                },
                "mono c#": {
                    "time": 8,
                    "memory": 256
                },
                "javascript": {
                    "time": 15,
                    "memory": 256
                },
                "scala": {
                    "time": 8,
                    "memory": 256
                },
                "kotlin": {
                    "time": 8,
                    "memory": 256
                },
                "go": {
                    "time": 8,
                    "memory": 256
                },
                "pascalabc": {
                    "time": 8,
                    "memory": 256
                },
                "perl": {
                    "time": 15,
                    "memory": 256
                }
            },
            "code_templates": {
                "python3": "# put your python code here",
                "c": "#include <stdio.h>\n\nint main() {\n  // put your code here\n  return 0;\n}",
                "c++": "#include <iostream>\n\nint main() {\n  // put your code here\n  return 0;\n}",
                "c++11": "#include <iostream>\n\nint main() {\n  // put your code here\n  return 0;\n}",
                "haskell": "main :: IO ()\n-- put your code here",
                "haskell 7.10": "main :: IO ()\n-- put your code here",
                "haskell 8.0": "main :: IO ()\n-- put your code here",
                "java": "class Main {\n  public static void main(String[] args) {\n    // put your code here\n  }\n}",
                "java8": "class Main {\n  public static void main(String[] args) {\n    // put your code here\n  }\n}",
                "java9": "class Main {\n  public static void main(String[] args) {\n    // put your code here\n  }\n}",
                "octave": "% put your octave code here",
                "asm32": "# put your asm32 code here",
                "asm64": "# put your asm64 code here",
                "shell": "# put your shell (bash) code here",
                "rust": "fn main() {\n    // put your Rust code here\n}",
                "r": "# put your R code here",
                "ruby": "# put your ruby code here",
                "clojure": ";; put your clojure code here",
                "mono c#": "using System;\n\npublic class MainClass\n{\n    public static void Main()\n    {\n        // put your c# code here\n    }\n}",
                "javascript": "// put your javascript (node.js) code here",
                "scala": "object Main {\n  def main(args: Array[String]) {\n    // put your code here\n  }\n}",
                "kotlin": "fun main(args: Array<String>) {\n    // put your code here\n}",
                "go": "package main\n\nfunc main() {\n    // put your code here\n}",
                "pascalabc": "begin\n    // put your code here\nend.",
                "perl": "use 5.024; # strict enabled by default\nuse warnings;\n\n# put your Perl code here"
            },
            "code_templates_options": {},
            "samples": [
                [
                    "",
                    ""
                ]
            ]
        },
        "subtitle_files": [],
        "source": {
            "templates_data": "",
            "execution_time_limit": 5,
            "is_memory_limit_scaled": true,
            "test_archive": [],
            "manual_memory_limits": [],
            "code": "def generate():\n    return [(\"\",\"\")]\n\ndef solve(dataset):\n    return \"\"\n\ndef check(reply, clue):\n    return 1\n\n",
            "manual_time_limits": [],
            "execution_memory_limit": 256,
            "is_time_limit_scaled": true,
            "samples_count": 1,
            "test_cases": [
                [
                    "",
                    "Harry"
                ]
            ]
        },
        "subtitles": {},
        "tests_archive": "/api/step-sources/296516/tests",
        "feedback_correct": "",
        "feedback_wrong": ""
    },
    "id": "296516",
    "time": "2018-05-10T16:22:01.996654"
}