{
    "block": {
        "name": "code",
        "text": "",
        "video": null,
        "animation": null,
        "options": {
            "execution_time_limit": 5,
            "execution_memory_limit": 256,
            "limits": {
                "python3": {
                    "time": 15,
                    "memory": 256
                }
            },
            "code_templates": {
                "python3": "# We write the files here so you can see what they contain\nf1 = open('jims_animals.py', 'w')\nf1.write('''\nclass Dog:\n    def identify(self):\n        return \"I am Jim's dog\"\n''')\nf1.close()\n\nf2 = open('joes_animals.py', 'w')\nf2.write('''\nclass Dog:\n    def identify(self):\n        return \"I am Joe's dog\"\n''')\nf2.close()\n\n# Now we import what we've just written\nimport jims_animals\nimport joes_animals\n\nclass AboutScope(unittest.TestCase):\n\n    def test_you_can_reference_classes_in_files(self):\n        # Here we use the classes in the modules we just imported\n        fido = jims_animals.Dog()\n        rover = joes_animals.Dog()\n\n        self.assertEqual(__, fido.identify())\n        self.assertEqual(__, rover.identify())\n\n        self.assertEqual(__, type(fido) == type(rover))\n        self.assertEqual(__, jims_animals.Dog == joes_animals.Dog)"
            },
            "code_templates_options": {},
            "samples": [
                [
                    "",
                    ""
                ]
            ]
        },
        "subtitle_files": [],
        "source": {
            "templates_data": "::python3\n::header\nimport unittest\n__ = \"-=> FILL ME IN! <=-\"\n______ = \"-=> FILL ME IN! <=-\"\n_______ = \"-=> FILL ME IN! <=-\"\n\nclass ___(Exception):\n    pass\n\n____ = \"-=> TRUE OR FALSE? <=-\"\n\n_____ = 0\n\ndef _________(parameter1):\n    return \"please choose the right method\"\n\n\n::code\n# We write the files here so you can see what they contain\nf1 = open('jims_animals.py', 'w')\nf1.write('''\nclass Dog:\n    def identify(self):\n        return \"I am Jim's dog\"\n''')\nf1.close()\n\nf2 = open('joes_animals.py', 'w')\nf2.write('''\nclass Dog:\n    def identify(self):\n        return \"I am Joe's dog\"\n''')\nf2.close()\n\n# Now we import what we've just written\nimport jims_animals\nimport joes_animals\n\nclass AboutScope(unittest.TestCase):\n\n    def test_you_can_reference_classes_in_files(self):\n        # Here we use the classes in the modules we just imported\n        fido = jims_animals.Dog()\n        rover = joes_animals.Dog()\n        \n        self.assertEqual(__, fido.identify())\n        self.assertEqual(__, rover.identify())\n\n        self.assertEqual(__, type(fido) == type(rover))\n        self.assertEqual(__, jims_animals.Dog == joes_animals.Dog)\n\n::footer\nif __name__ == '__main__':\n    unittest.main()\n\n",
            "execution_time_limit": 5,
            "is_memory_limit_scaled": true,
            "test_archive": [],
            "manual_memory_limits": [],
            "code": "def generate():\n    return [(\"\",\"\")]\n\ndef solve(dataset):\n    return \"\"\n\ndef check(reply, clue):\n    return 1\n\n",
            "manual_time_limits": [],
            "execution_memory_limit": 256,
            "is_time_limit_scaled": true,
            "samples_count": 1
        },
        "subtitles": {},
        "tests_archive": "/api/step-sources/296752/tests",
        "feedback_correct": "",
        "feedback_wrong": ""
    },
    "id": "296752",
    "time": "2018-05-10T16:29:22.999049"
}